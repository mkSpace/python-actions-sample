name: Python package

on:
  issue_comment:
    types: [created]

jobs:
  tests:
    if: contains(github.event.comment.body, 'run test')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
    - name: Send starting message
      run: |
        curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
        -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
        -d "{\"body\": \"testing..."}"
        
    - uses: actions/checkout@v3
      with: 
        ref: ${{ github.event.pull_request.base.ref }}
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Add result on PR
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/pulls/comments \
        --header 'authorization: Bearer ${{ secrets.ACCESS_TOKEN }}' \
        --header 'content-type: application/json' \
        --data "{
          \"body\": \"$(python test.py)\"
        }"
        
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  pull_request:
    branches:
      - mater
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
    - name: Send starting message
      run: |
        curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
        -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
        -d "{\"body\": \"testing..."}"
    
    - name: Checkouk
      uses: actions/checkout@v2
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Add result on PR
      run: |
        curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
        -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
        -d "{\"body\": \"$(python test.py)\"}"
